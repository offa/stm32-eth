name: ci

on: [push, pull_request]

permissions:
  contents: read
  pull-requests: read

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - gcc:15
          - gcc:14
          - clang:20
          - clang:19
    container:
      image: "registry.gitlab.com/offa/docker-images/${{ matrix.compiler }}"
    name: "${{ matrix.compiler }}"
    steps:
      - uses: actions/checkout@main
      - name: Install dependencies
        run: script/ci_install_dependencies.sh
      - name: Build
        run: script/ci_build.sh -asan -ubsan

  build_arm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - arm-none-eabi-gcc:14
        build_config:
          - {build_type: Debug, lto: OFF}
          - {build_type: Release, lto: OFF}
          - {build_type: MinSizeRel, lto: OFF}
          - {build_type: MinSizeRel, lto: ON}
    container:
      image: "registry.gitlab.com/offa/docker-images/${{ matrix.compiler }}"
    name: "${{ matrix.compiler }} - ${{ matrix.build_config.build_type }} (LTO: ${{ matrix.build_config.lto }})"
    steps:
      - uses: actions/checkout@main
      - name: Build
        run: |
          export BUILD_TYPE=${{ matrix.build_config.build_type }}
          export LTO_ENABLED=${{ matrix.build_config.lto }}
          export COMPILER=${{ matrix.compiler }}
          script/ci_build.sh

  formatting-check:
    name: "formatting"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: jidicula/clang-format-action@main
      name: "Verify formatting"
      with:
        clang-format-version: 19
        exclude-regex: "/system/"
